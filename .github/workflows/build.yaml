name: Build

on:
    push:
        branches-ignore:
            - 'dependabot/**'
    pull_request: ~
    release:
        types: [created]
    schedule:
        -
            cron: "0 1 * * 6" # Run at 1am every Saturday
    workflow_dispatch: ~

jobs:
    tests:
        runs-on: ubuntu-latest

        name: "Sylius ${{ matrix.sylius }}, PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, MySQL ${{ matrix.mysql }}"

        strategy:
            fail-fast: false
            matrix:
                php: ["8.3"]
                symfony: ["^6.4", "^7.3"]
                sylius: ["~2.0.0", "~2.1.0"]
                node: ["22.x"]
                mysql: ["8.4"]

        env:
            APP_ENV: test
            BEHAT_BASE_URL: "https://127.0.0.1:8080/"
            DATABASE_URL: "mysql://root:root@127.0.0.1/sylius?serverVersion=${{ matrix.mysql }}"

        steps:
            -
                uses: actions/checkout@v4

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl
                    tools: flex, symfony
                    coverage: none

            -
                name: Setup Node
                uses: actions/setup-node@v4
                with:
                    node-version: "${{ matrix.node }}"

            -
                name: Shutdown default MySQL
                run: sudo service mysql stop

            -
                name: Setup MySQL
                uses: mirromutth/mysql-action@v1.1
                with:
                    mysql version: "${{ matrix.mysql }}"
                    mysql root password: "root"

            -
                name: Output PHP version for Symfony CLI
                run: php -v | head -n 1 | awk '{ print $2 }' > .php-version

            -
                name: Install certificates
                run: symfony server:ca:install

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            -
                name: Cache Composer
                uses: actions/cache@v4
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-

            -
                name: Restrict Symfony version
                if: matrix.symfony != ''
                run: |
                    composer global require --no-progress --no-scripts --no-plugins "symfony/flex:^2.4"
                    composer global config --no-plugins allow-plugins.symfony/flex true
                    composer config extra.symfony.require "${{ matrix.symfony }}"

            -
                name: Restrict Sylius version
                if: matrix.sylius != ''
                run: composer require "sylius/sylius:${{ matrix.sylius }}" --no-update --no-scripts --no-interaction

            -
                name: Install PHP dependencies
                run: composer install --no-interaction

            -
                name: Run unit tests
                run: vendor/bin/phpunit --colors=always --testsuite=unit

            -
                name: Get Yarn cache directory
                id: yarn-cache
                run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

            -
                name: Cache Yarn
                uses: actions/cache@v4
                with:
                    path: ${{ steps.yarn-cache.outputs.dir }}
                    key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/package.json **/yarn.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-node-${{ matrix.node }}-yarn-

            -
                name: Install JS dependencies
                run: (cd vendor/sylius/test-application && yarn install)

            -
                name: Prepare test application database
                run: |
                    (vendor/bin/console doctrine:database:create -vvv)
                    (vendor/bin/console doctrine:schema:create -vvv)

            -
                name: Prepare test application assets
                run: |
                    vendor/bin/console assets:install -vvv
                    (cd vendor/sylius/test-application && yarn build)

            -
                name: Prepare test application cache
                run: vendor/bin/console cache:warmup -vvv

            -
                name: Load fixtures in test application
                run: vendor/bin/console sylius:fixtures:load -n

            -
                name: Validate composer.json
                run: composer validate --ansi --strict

            -
                name: Validate container
                run: vendor/bin/console lint:container

            -
                name: Run Non-unit PHPUnit tests
                run: vendor/bin/phpunit --colors=always --testsuite=non-unit

            -
                name: Run PHPSpec
                run: vendor/bin/phpspec run --ansi -f progress --no-interaction

            -
                name: Run PHPUnit
                run: vendor/bin/phpunit --colors=always

            -
                name: Run PHPStan
                run: vendor/bin/phpstan analyse -c phpstan.neon -l max src/
            -
                name: Run Chrome Headless
                run: google-chrome-stable --enable-automation --disable-background-networking --no-default-browser-check --no-first-run --disable-popup-blocking --disable-default-apps --allow-insecure-localhost --disable-translate --disable-extensions --no-sandbox --enable-features=Metal --headless --remote-debugging-port=9222 --window-size=2880,1800 --proxy-server='direct://' --proxy-bypass-list='*' http://127.0.0.1 > /dev/null 2>&1 &

            -
                name: Run webserver
                run: symfony server:start --port=8080 --daemon

            -
                name: Run Behat
                run: vendor/bin/behat --colors --strict -vvv --no-interaction -f progress || vendor/bin/behat --colors --strict -vvv --no-interaction -f progress --rerun

            -
                name: Upload Behat logs
                uses: actions/upload-artifact@v4
                if: failure()
                with:
                    name: "Behat logs - ${{ matrix.sylius }}-${{ github.run_id }}-${{ github.run_number }}"
                    path: etc/build/
                    if-no-files-found: ignore
                    compression-level: 6
                    overwrite: true
